'''
该文件是用来辅助分析的, 观看每个数据文件, 画出时频域图, 找出有效数据分割点
'''
import os
from scipy import io
import matplotlib.pyplot as plt
import numpy as np
from scipy.io import loadmat


def plot_time_fft(array, name):
    '''
    plot time and frequency picture
    :param array: one dimension array and class is numpy ndarry
    :param name: the array tag
    :return: no
    '''
    L1 = len(array)
    # plot time domain picture
    # plt.subplot(211)
    plt.plot(array)
    plt.title(name)
    PL = np.abs(np.fft.fft(array / L1))[: int(L1 / 2)]

    # plot frequency domain picture
    PL[0] = 0
    # PL2[0] = 0
    f1 = np.fft.fftfreq(L1, 1 / 25600)[: int(L1 / 2)]
   # f1 = np.fft.fftfreq(L1, 1 / 2000000)[: int(L1 / 2)]

    # plt.subplot(212)
    # plt.plot(f1, PL)
    # plt.title(name)
    # #plt.savefig(name+'.png', bbox_inches='tight')
    plt.show()

# see ae data
def load_mat_func(path):

    data = loadmat(path)
    data1 = data['MT3_y_feed_axis_data']
    return data1



def analysis(file_name, folder_path):
    print('='*50)
    print(file_name)
    data = load_mat_func(folder_path+file_name+'.mat')
    print(data.shape)  # (1, 1510400)
    plot_time_fft(data.flatten(), file_name)


MT1_x_feed_file__all_list = []
MT1_x_feed_folder_path='C:/Users/数据采集/Desktop/新建文件夹 (2)/ae_analysis/MT3_y_feed/MT3_y_feed_mat/'

normal_MT1_x_feed_file_list = ['y_normal_feed1000-15-24-23',   # [100000, 238000], [238000, 376000], [376000,514000], [520000, 658000], [658000, 796000], [796000, 934000]
                               # 'y_normal_feed2000-15-26-39',   # [ 90000, 302000], [306000, 510000]
                               # 'y_normal_feed3000-15-27-31',   # [ 95000, 210000], [240000, 370000]
                               'y_normal_feed4000-15-27-54',   # [ 93000, 193000], [200000, 300000], [306000, 406000], [410000, 510000], [520000, 620000], [623000, 723000]
                               'y_normal_feed5000-15-28-29',   # [130000, 200000], [218000, 288000], [305000, 375000], [390000, 460000], [475000, 545000], [562000, 632000]
                               'y_normal_feed6000-15-29-02',   # [90000, 150000], [160000, 220000], [232000, 292000], [305000, 365000], [372000, 432000], [445000, 505000]
                               'y_normal_feed7000-15-29-29',   # [80000, 135000], [143000, 198000], [205000, 260000], [265000, 320000], [327000, 382000], [390000, 445000]
                               'y_normal_feed8000-15-29-55',   # [100000, 150000], [154000, 204000], [208000, 258000], [260000, 310000], [315000, 365000], [370000,420000]
                               'y_normal_feed9000-15-30-18',   # [80000, 120000], [125000, 165000], [172000, 212000], [220000, 260000], [270000, 310000], [316000, 356000]
                               'y_normal_feed10000-15-30-47']  #需重新分，等间距，取六段 [85000, 124000], [128000, 167000], [170000, 210000], [213000, 253000], [343000, 383000], [386000, 426000]
MT1_x_feed_file__all_list.append(normal_MT1_x_feed_file_list)

inner_MT1_x_feed_file_list = ['y_in_0.6_0.002_feed_1000-14-59-29',    # [130000, 270000],[270000, 410000], [410000, 550000], [560000, 7000000], [700000, 840000], [840000, 980000]
                              # 'y_in_0.6_0.002_feed_2000-15-01-13',    # 故障数据，见桌面截图
                              # 'y_in_0.6_0.002_feed_3000-15-02-05',    # 故障数据，见桌面截图
                              'y_in_0.6_0.002_feed_4000-15-02-26',    # [33000, 133000], [142000, 242000], [249000, 349000], [358000, 458000], [463000, 563000], [573000, 673000]
                              'y_in_0.6_0.002_feed_5000-15-03-02',    # [30000, 100000], [111000, 181000], [200000, 270000], [284000, 354000], [370000, 440000], [457000, 527000]
                              'y_in_0.6_0.002_feed_6000-15-03-30',    # [55000, 115000], [126000, 186000], [198000, 258000], [270000, 330000], [341000, 401000], [414000, 474000]
                              'y_in_0.6_0.002_feed_7000-15-03-55',    # [44000, 101000], [105000, 162000], [167000, 224000], [228000, 285000], [290000, 347000], [351000, 408000]
                              'y_in_0.6_0.002_feed_8000-15-04-17',    # [48000, 98000], [101000, 151000], [156000, 206000], [210000, 260000], [263000, 313000], [318000, 368000]
                              'y_in_0.6_0.002_feed_9000-15-04-38',    # [33000, 78000], [81000, 126000], [129000, 174000], [177000, 222000], [224000, 269000], [272000, 317000]
                              'y_in_0.6_0.002_feed_10000-15-05-20']   # [43900, 83900], [87000, 127000], [130000, 170000], [173000, 213000], [216000, 256000], [259000, 299000] [302000, 342000], [345000, 285000]
MT1_x_feed_file__all_list.append(inner_MT1_x_feed_file_list)

outer_MT1_x_feed_file_list = ['y_out_0.6_0.002_feed_1000-15-50-20',   #有异常故障段，分段时去掉了 [35000, 139000]，[331000, 435000], [462000, 566000],[566000, 670000], [670000, 774000] [774000, 878000]
                              # 'y_out_0.6_0.002_feed_2000-15-51-35',   # [, ], [, ], [, ], [, ], [, ], [, ] 这个不用分了
                              # 'y_out_0.6_0.002_feed_3000-15-52-20',   # [, ], [, ], [, ], [, ], [, ], [, ] 这个不用分了
                              'y_out_0.6_0.002_feed_4000-15-52-37',   # [30000, 130000], [130000, 230000], [230000, 330000], [330000, 430000], [430000, 530000], [530000, 630000]
                              'y_out_0.6_0.002_feed_5000-15-53-08',   # [15000, 95000], [95000, 175000], [175000, 255000], [255000, 335000], [335000, 415000], [415000, 495000]
                              'y_out_0.6_0.002_feed_6000-15-53-35',   # [10000, 75000], [80000, 145000], [155000, 220000], [225000, 290000], [295000,360000 ], [365000, 430000]
                              'y_out_0.6_0.002_feed_7000-15-53-59',   # [15000, 65000], [75000, 125000], [140000, 190000], [200000, 250000], [260000, 310000], [320000, 370000]
                              'y_out_0.6_0.002_feed_8000-15-54-21',   #  [0, 45000], [50000, 95000], [105000, 150000], [158000, 203000], [210000, 255000], [265000, 310000]
                              'y_out_0.6_0.002_feed_9000-15-54-40',   # [45000, 85000], [90000, 130000], [140000, 180000], [186000, 226000], [235000, 275000], [285000, 325000]
                              'y_out_0.6_0.002_feed_10000-15-54-59']  #[45000, 75000], [90000, 120000], [130000, 160000], [175000, 205000], [220000, 250000], [260000, 290000]
MT1_x_feed_file__all_list.append(outer_MT1_x_feed_file_list)

for i in MT1_x_feed_file__all_list:
    for j in i:
        analysis(j, MT1_x_feed_folder_path)








